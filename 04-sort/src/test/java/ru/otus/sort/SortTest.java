/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package ru.otus.sort;


import org.junit.jupiter.api.Test;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.MethodSource;
import ru.otus.ChessPlayer;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Comparator;
import java.util.List;
import java.util.stream.Stream;

import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Assertions.assertTrue;


public class SortTest {
    private static final String STANDARD_RATING = "standard_rating_list.xml";

    @ParameterizedTest
    @MethodSource("chessPlayerProvider")
    public void invertionSort(List<ChessPlayer> list) {

        Comparator<ChessPlayer> comparator = ChessPlayer.RATING_DESC;
        Sort.insertion(list, comparator);
        assertTrue(Sort.isSorted(list, comparator));
        list.forEach(System.out::println);
    }

    @Test
    public void insertionSortInts() {
        ArrayList<Integer> integers = new ArrayList<>(Arrays.asList(5, 4, 3, 2, 1));
        Sort.insertion(integers, Comparator.reverseOrder());
        assertTrue(Sort.isSorted(integers, Comparator.reverseOrder()));
        System.out.println(integers);
    }


    private static Stream<List<ChessPlayer>> chessPlayerProvider() {
        return Stream.of(ChessPlayer.loadXML(STANDARD_RATING, 100));
    }

    @Test
    void isSorted() {
        ArrayList<Integer> ints = new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10));
        ArrayList<Integer> ints1 = new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 0));

        assertTrue(Sort.isSorted(ints, Integer::compareTo));
        assertFalse(Sort.isSorted(ints1, Integer::compareTo));
    }

    @Test
    void isSortedOnEmptyList() {
        ArrayList<Integer> empty = new ArrayList<>();
        assertTrue(Sort.isSorted(empty, Integer::compareTo));
    }
}
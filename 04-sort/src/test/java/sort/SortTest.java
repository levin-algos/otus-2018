/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package sort;


import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import ru.otus.ChessPlayer;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Comparator;
import java.util.List;

import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Assertions.assertTrue;


class SortTest {
    private static final String STANDARD_RATING = "standard_rating_list.xml";
    private static List<ChessPlayer> players;

    @BeforeEach
    void prepare() {
        players = ChessPlayer.loadXML(STANDARD_RATING, 10000);
    }

    @Test
    void insertionSort() {
        Comparator<ChessPlayer> comparator = ChessPlayer.RATING_DESC;
        Sort.insertion(players, comparator);
        assertTrue(Sort.isSorted(players, comparator));
    }

    @Test
    void shellSort() {
        int[] gap = new int[]{701, 301, 132, 57, 23, 10, 4, 1};
        Comparator<ChessPlayer> comparator = ChessPlayer.RATING_DESC;
        Sort.shell(players, comparator, gap);
        assertTrue(Sort.isSorted(players, comparator));
    }

    @Test
    void insertionSortInts() {
        ArrayList<Integer> integers = new ArrayList<>(Arrays.asList(5, 4, 3, 2, 1));
        Comparator<Integer> comparator = Comparator.naturalOrder();

        Sort.insertion(integers, comparator);
        assertTrue(Sort.isSorted(integers, comparator));
    }

    @Test
    void isSorted() {
        ArrayList<Integer> ints = new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10));
        ArrayList<Integer> ints1 = new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 0));

        assertTrue(Sort.isSorted(ints, Integer::compareTo));
        assertFalse(Sort.isSorted(ints1, Integer::compareTo));
    }

    @Test
    void isSortedOnEmptyList() {
        ArrayList<Integer> empty = new ArrayList<>();
        assertTrue(Sort.isSorted(empty, Integer::compareTo));
    }
}